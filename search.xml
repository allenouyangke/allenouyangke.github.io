<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[tomcat配置ssl证书实现https访问]]></title>
      <url>%2F2016%2F12%2F09%2Ftomcat-https%2F</url>
      <content type="text"><![CDATA[tomcat的ssl证书配置&emsp;&emsp;由于工作需要，需要在某语音服务器上配置ssl证书。该服务器上使用的是tomcat运行着语音服的程序，由于自己也不怎么熟悉，刚开始在测试环境中进行了测试，琢磨了一个上午，查了一些资料，总结起来就是将申请下来的证书和密钥添加到配置文件。&emsp;&emsp;自己学艺不精，还是遇上比较多的问题；&emsp;&emsp;1.配置https后，域名能访问8443端口，但是ip访问不了8080端口；&emsp;&emsp;2.对于tomcat的ssl证书的理解不深入，导致配置中一直出现问题； 配置tomcat的ssl证书 tomcat安装路径及目录结构 配置文件路径 1vim /usr/local/tomcat/conf/server.xml 配置文件路径 1234567891011&lt;!--在tomcat配置文件中找到&lt;Connector port="8443" protocol="org.apache.coyote.http11.Http11Protocol" SSLEnabled="true" maxThreads="150" scheme="https" secure="true" clientAuth="false" sslProtocol="TLS" /&gt;--&gt;#将注释去掉，添加tomcat的相关域名证书和密码，添加后设置如下&lt;Connector port="443" protocol="org.apache.coyote.http11.Http11Protocol" SSLEnabled="true" maxThreads="150" scheme="https" secure="true" clientAuth="false" keystoreFile="/usr/local/tomcat/conf/example.com.jks" keystorePass="example_passwd" sslProtocol="TLS" /&gt; 证书存放路径可以自定义，在配置keystoreFile时一定需要使用绝对路径，可以减少很多不必要的错误。 验证配置 对tomcat进行重启 1234567#转到../tomcat/bin/下#关闭./shutdown.sh#开启./startup.#!/bin/sh 绑定hosts 12345#Linux&amp;Mac:/etc/hosts#Windows:C:\Windows\System32\drivers\etc58.229.*.* test.example.com 访问链接验证注：因为证书是针对域名的，所以一般访问域名才会生效1https://test.example.com:8443/]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Next主题配置文件详解]]></title>
      <url>%2F2016%2F12%2F01%2Fnext-config%2F</url>
      <content type="text"><![CDATA[&emsp;&emsp;对Next主题文件学习的一些标注；备注一部分常用的优化配置项。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407408409410411412413414415416417418419420421422423424425426427428429430431432433434435436437438439440441442443444445446447448449450451452453454455456457458459460461462463464465466467468469470471472473474475476477478479480481482483484485# ---------------------------------------------------------------# Site Information Settings# ---------------------------------------------------------------# Put your favicon.ico into `hexo-site/source/` directory.# 站标favicon: /favicon.ico# Set default keywords (Use a comma to separate)# 网站关键字keywords: "Hexo, NexT"# Set rss to false to disable feed link.# Leave rss as empty to use site's feed link.# Set rss to specific value if you have burned your feed already.#rss:# Specify the date when the site was setup# 站点建立时间since: 2016-11-25# Footer `powered-by` and `theme-info` copyrightcopyright: true# Canonical, set a canonical link tag in your hexo, you could use it for your SEO of blog.# See: https://support.google.com/webmasters/answer/139066# Tips: Before you open this tag, remeber set up your URL in hexo \_config.yml ( ex. url: http://yourdomain.com )canonical: true# ---------------------------------------------------------------# Menu Settings# ---------------------------------------------------------------# When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash (/archives -&gt; archives)# 菜单路径设置；若hexo在二级目录放置要去掉／# 这里的顺序会影响页面上的排版menu: # 首页／主页 home: / # 归档／分类 categories: /categories # 归档 archives: /archives # 关于 about: /about # 标签 #tags: /tags # 网站地图 #sitemap: /sitemap.xml # 公益404页面 #commonweal: /404.html# Enable/Disable menu icons.# Icon Mapping:# Map a menu item to a specific FontAwesome icon name.# Key is the name of menu item and value is the name of FontAwsome icon. Key is case-senstive.# When an question mask icon presenting up means that the item has no mapping icon.# icon图标menu_icons: enable: true #KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome home: home about: user categories: th schedule: calendar #tags: tags archives: archive sitemap: sitemap commonweal: heartbeat# ---------------------------------------------------------------# Scheme Settings# ---------------------------------------------------------------# Schemes# next三个排版模式#scheme: Muse#scheme: Mistscheme: Pisces# ---------------------------------------------------------------# Font Settings# - Find fonts on Google Fonts (https://www.google.com/fonts)# - All fonts set here will have the following styles:# light, light italic, normal, normal intalic, bold, bold italic# - Be aware that setting too much fonts will cause site running slowly# - Introduce in 5.0.1# ---------------------------------------------------------------font: enable: true # Uri of fonts host. E.g. //fonts.googleapis.com (Default) host: # Global font settings used on &lt;body&gt; element. global: # external: true will load this font family from host. external: true family: Lato # Font settings for Headlines (h1, h2, h3, h4, h5, h6) # Fallback to `global` font settings. headings: external: true family: # Font settings for posts # Fallback to `global` font settings. posts: external: true family: # Font settings for Logo # Fallback to `global` font settings. # The `size` option use `px` as unit logo: external: true family: size: # Font settings for &lt;code&gt; and code blocks. codes: external: true family: size:# ---------------------------------------------------------------# Sidebar Settings# ---------------------------------------------------------------# Social Links# 设置社交链接# Key is the link label showing to end users.# Value is the target link (E.g. GitHub: https://github.com/iissnan)social:#LinkLabel: Link GitHub: https://github.com/allenouyangke/# Social Links Icons# 设置社交链接的图标# Icon Mapping:# Map a menu item to a specific FontAwesome icon name.# Key is the name of the item and value is the name of FontAwsome icon. Key is case-senstive.# When an globe mask icon presenting up means that the item has no mapping icon.social_icons: enable: true # Icon Mappings. # KeyMapsToSocalItemKey: NameOfTheIconFromFontAwesome GitHub: github Twitter: twitter Weibo: weibo# Sidebar Avatar# in theme directory(source/images): /images/avatar.jpg# in site directory(source/uploads): /uploads/avatar.jpg#avatar:# Table Of Contents in the Sidebartoc: enable: true # Automatically add list number to toc. number: true# Creative Commons 4.0 International License.# http://creativecommons.org/# Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero#creative_commons: by-nc-sa#creative_commons:# 侧边栏显示位置sidebar: # Sidebar Position, available value: left | right position: left #position: right # Sidebar Display, available value: # - post expand on posts automatically. Default. # - always expand for all pages automatically # - hide expand only when click on the sidebar toggle icon. # - remove Totally remove sidebar including sidebar toggler. display: post #display: always #display: hide #display: remove# Blogrolls# 友情链接#links_title: Links#links_layout: block#links_layout: inline#links: #Title: http://example.com/# ---------------------------------------------------------------# Post Settings# ---------------------------------------------------------------# Automatically scroll page to section which is under &lt;!-- more --&gt; mark.scroll_to_more: true# Automatically excerpt description in homepage as preamble text.excerpt_description: true# Automatically Excerpt. Not recommand.# Please use &lt;!-- more --&gt; in the post to control excerpt accurately.auto_excerpt: enable: true length: 150# Post meta display settingspost_meta: created_at: true updated_at: false categories: true# Wechat Subscriber# 订阅微信公众号#wechat_subscriber: #enabled: true #qcode: /path/to/your/wechatqcode ex. /uploads/wechat-qcode.jpg #description: ex. subscribe to my blog by scanning my public wechat account# ---------------------------------------------------------------# Misc Theme Settings# ---------------------------------------------------------------# Custom Logo.# !!Only available for Default Scheme currently.# Options:# enabled: [true/false] - Replace with specific image# image: url-of-image - Images's urlcustom_logo: enabled: false image:# Code Highlight theme#设置文章中代码高亮主题# Available value:# normal | night | night eighties | night blue | night bright# https://github.com/chriskempson/tomorrow-themehighlight_theme: night bright# ---------------------------------------------------------------# Third Party Services Settings# ---------------------------------------------------------------# MathJax Supportmathjax: enable: false per_page: false cdn: //cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML# Swiftype Search API Key#swiftype_key:# Baidu Analytics ID#baidu_analytics:# Duoshuo ShortName#duoshuo_shortname:# Disqus#disqus_shortname:# Hypercomments#hypercomments_id:# Baidu Share# Available value:# button | slide# Warning: Baidu Share does not support https.#baidushare:## type: button# Share#jiathis:# Warning: JiaThis does not support https.#add_this_id:# Share#duoshuo_share: true# Google Webmaster tools verification setting# See: https://www.google.com/webmasters/#google_site_verification:# Google Analytics#google_analytics:# CNZZ count#cnzz_siteid:# Application Insights# See https://azure.microsoft.com/en-us/services/application-insights/# application_insights:# Make duoshuo show UA# user_id must NOT be null when admin_enable is true!# you can visit http://dev.duoshuo.com get duoshuo user id.duoshuo_info: ua_enable: true admin_enable: false user_id: 0 #admin_nickname: Author# Facebook SDK Support.# https://github.com/iissnan/hexo-theme-next/pull/410facebook_sdk: enable: false app_id: #&lt;app_id&gt; fb_admin: #&lt;user_id&gt; like_button: #true webmaster: #true# Facebook comments plugin# This plugin depends on Facebook SDK.# If facebook_sdk.enable is false, Facebook comments plugin is unavailable.facebook_comments_plugin: enable: false num_of_posts: 10 # min posts num is 1 width: 100% # default width is 550px scheme: light # default scheme is light (light or dark)# Show number of visitors to each article.# You can visit https://leancloud.cn get AppID and AppKey.leancloud_visitors: enable: false app_id: #&lt;app_id&gt; app_key: #&lt;app_key&gt;# Show PV/UV of the website/page with busuanzi.# Get more information on http://ibruce.info/2015/04/04/busuanzi/busuanzi_count: # count values only if the other configs are false enable: true # custom uv span for the whole site site_uv: true site_uv_header: 本站访客数 #site_uv_header: &lt;i class="fa fa-user"&gt;&lt;/i&gt; site: 人次 #site_uv_footer: # custom pv span for the whole site site_pv: true site_pv_header: 本站总访问量 #site_pv_header: &lt;i class="fa fa-eye"&gt;&lt;/i&gt; site_pv_footer: 次 #site_pv_footer: # custom pv span for one page only page_pv: true page_pv_header: 本文总阅读量 #page_pv_header: &lt;i class="fa fa-file-o"&gt;&lt;/i&gt; page_pv_footer: 次 #page_pv_footer:# Tencent analytics ID# tencent_analytics:# Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEObaidu_push: false# Google Calendar# Share your recent schedule to others via calendar page## API Documentation:# https://developers.google.com/google-apps/calendar/v3/reference/events/listcalendar: enable: false calendar_id: &lt;required&gt; api_key: &lt;required&gt; orderBy: startTime offsetMax: 24 offsetMin: 4 timeZone: showDeleted: false singleEvents: true maxResults: 250# Algolia Searchalgolia_search: enable: false hits: per_page: 10 labels: input_placeholder: Search for Posts hits_empty: "We didn't find any results for the search: $&#123;query&#125;" hits_stats: "$&#123;hits&#125; results found in $&#123;time&#125; ms"#! ---------------------------------------------------------------#! DO NOT EDIT THE FOLLOWING SETTINGS#! UNLESS YOU KNOW WHAT YOU ARE DOING#! ---------------------------------------------------------------# Motionuse_motion: true# Fancyboxfancybox: true# Script Vendors.# Set a CDN address for the vendor you want to customize.# For example# jquery: https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js# Be aware that you should use the same version as internal ones to avoid potential problems.# Please use the https protocol of CDN files when you enable https on your site.vendors: # Internal path prefix. Please do not edit it. _internal: lib # Internal version: 2.1.3 jquery: # Internal version: 2.1.5 # See: http://fancyapps.com/fancybox/ fancybox: fancybox_css: # Internal version: 1.0.6 # See: https://github.com/ftlabs/fastclick fastclick: # Internal version: 1.9.7 # See: https://github.com/tuupola/jquery_lazyload lazyload: # Internal version: 1.2.1 # See: http://VelocityJS.org velocity: # Internal version: 1.2.1 # See: http://VelocityJS.org velocity_ui: # Internal version: 0.7.9 # See: https://faisalman.github.io/ua-parser-js/ ua_parser: # Internal version: 4.6.2 # See: http://fontawesome.io/ fontawesome: # Internal version: 1 # https://www.algolia.com algolia_instant_js: algolia_instant_css:# Assetscss: cssjs: jsimages: images# Theme versionversion: 5.1.0]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hexo图床:七牛+Chrome+极简图床插件]]></title>
      <url>%2F2016%2F11%2F30%2Fqn-jjtc%2F</url>
      <content type="text"><![CDATA[概述&emsp;&emsp;在hexo blog中使用markdown编写文档，插入的图片的方式为：1![picture_title](picture_url) &emsp;&emsp;所以需要找一个网络存储存放相关的图片，并生成一个有效的链接进行调用。这里选择七牛的对象存储，存放和调用图片（一定范围内是免费的）。 作者：panda链接：https://www.zhihu.com/question/51705387/answer/131263855来源：知乎著作权归作者所有，转载请联系作者获得授权。 七牛云存储&emsp;&emsp;在七牛先注册一个账号，登陆后建立对象存储。&emsp;&emsp;“测试域名”在极简图床插件中需要使用到。 极简图床插件&emsp;&emsp;打开Chrome浏览器，在插件商店添加“极简图床”，打开后点击右上角的“设置”，将你的七牛对象存储配置到上面。说明： 空间名称：可以自定义，没有特殊要求。 AK和SK：在图3中，七牛账号里寻找，路径：“个人面板-&gt;个人中心-&gt;密钥管理”。 域名：如果没有个人域名就填写图1中的“测试域名”，有个人域名建议使用个人域名。 使用步骤 将本地需要配置到文章中的图片，拖入Chrome的极简图床窗口； 按照提示：“粘贴、拖动或点此选择图片上传”即可将图片上传到你的七牛对象存储中，并生成相应的图片链接； 在“我的上传”中，找到需要插入的图片资源，复制的相应的url，根据Markdown的语法调用即可； 总结&emsp;&emsp;整个的操作很简单，可能Chrome的极简图床插件需要连接下VPN。个人比较喜欢使用“Hexo+七牛+Chrome+极简图床插件”，因为这全都是免费的。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hexo基础]]></title>
      <url>%2F2016%2F11%2F29%2Fhexo-bases%2F</url>
      <content type="text"><![CDATA[&emsp;&emsp;在mac上安装了hexo后的一些学习心得和总结，主要是对主配置文件（_config.yml)和hexo操作命令的一些总结，以便以后能快速回顾。 Hexo安装12345678# 安装npm install hexo -g# 升级npm update hexo -g# 初始化,可以指定初始化的目录hexo init &quot;dir_name&quot; 基础配置添加标签页面12345678910111213141516# 建立标签页面cd hexo-sitehexo new page tags# 设置页面类型title: 标签date: 2016-11-29 12:12:12type: &quot;tags&quot;---# 修改菜单,并设置该页禁用标签功能menu: home: / archives: /archives tags: /tags comments: false 添加分类页面12345678910111213141516# 建立分类页面cd hexo-sitehexo new page categories# 设置页面类型title: 分类date: 2016-11-29 12:12:12type: &quot;categories&quot;---# 修改菜单，并设置该页面禁用标签功能menu: home: / archives: /archives categories: /categories comments: false 基础操作命令新建文章12345#新建文章hexo n &quot;article_name&quot; == hexo new &quot;article_name&quot;#草稿hexo p &quot;article_name&quot; == hexo publish &quot;article_name&quot; 部署文章123456789101112131415#清理缓存hexo clean#生成静态页面到public目录hexo g == hexo generate#启动服务预览，可以在后面添加“--debug”参数hexo s == hexo server#部署到githubhexo d == hexo deploy#可以将部署简写hexo generate --deployhexo deploy --generate 服务器命令1234567891011#Hexo监视文件变动并自动更新，无须重启hexo server#静态模式hexo server -s#更改端口hexo server -p 5000#自定义iphexo server -i 192.168.1.1]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hexo主配置文件详解]]></title>
      <url>%2F2016%2F11%2F29%2Fhexo-config%2F</url>
      <content type="text"><![CDATA[相关事项 配置文件中，冒号(:)后面一定需要加空格 Hexo官方配置说明 配置文件路径：hexo的目录下的config.yml文件 配置文件详解 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Site 网站信息# 标题title: AllenKe Blog# 头像avatar: /images/avatar.jpg# 副标题subtitle: 技术学习文档汇总# 网站描述description: 不忘初心，方能终始# 作者昵称author: AllenKe# 网站语言；默认英语language: zh-Hans# 时区；默认电脑时区#timezone: Asia/Shanghaitimezone:# URL 网址设置## 如果网站是放在子目录中，将url设置成'http://yoursite.com/child'，将root设置成'/child/'## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'# 网址 url: http://yoursite.com# 网站根目录。如果网站是放在子目录中，将root设置城‘子目录’root: /# 文章链接地址格式。即文章的存放目录permalink: :year/:month/:day/:title/permalink_defaults:# Directory 目录设置# 资源文件夹：里面的文件会上传到Githubsource_dir: source# 公共文件夹：存放生成的静态文件public_dir: public# 标签文件夹：默认是tages；实际路径是source/tagstag_dir: tagsrss_dir: rss# 档案文件夹：默认是archivesarchive_dir: archives# 分类文件夹：默认是categories；实际存放在source/categoriescategory_dir: categories# 代码文件夹：默认是downloads/codecode_dir: downloads/code# 国际化文件夹：默认与language相同i18n_dir: :lang# 不需要渲染的文件夹或文件夹，放在[]中# 这两个文件是百度和google的站长验证文件，不能渲染，否则会改变内容，不能验证过skip_render:# Writing 写作选项# 新建博文的默认名称# File name of new postsnew_post_name: :title.md# 默认布局模版是post，而不是draft或pagedefault_layout: post# 是否将标题转换成标题形式，首字母大写titlecase: false # Transform title into titlecase# 在新标签页面中打开网页external_link: true # Open external links in new tabfilename_case: 0# 食肉渲染草稿，默认是false，打开后可以阅览草稿render_drafts: true# 启动Asset文件夹post_asset_folder: false# 把链接改为与根目录的相对位置relative_link: false# 显示未来的文章future: true#代码块设置highlight: # 使用代码高亮 enable: true # 显示行号 line_number: true # 自动检查语言 auto_detect: false tab_replace:# Category &amp; Tag 分类和标签# 默认分类default_category: uncategorized# 分类别名category_map:# 标签别名tag_map:# Date / Time format 日期和时间格式## Hexo uses Moment.js to parse and display date## Hexo使用Moment.js 来解析和显示时间## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination 分页设置# ---------------下面选项需要对应插件的支持---------------# npm install hexo-generator-index --save# npm install hexo-generator-archive --save# npm install hexo-generator-category --save# npm install hexo-generator-tag --save## Set per_page to 0 to disable pagination# 设置每页显示的文章量per_page: 10# 首页的分页设置#index_generator:# per_page: 5# 归档页的分页设置#archive_generator:# per_page: 30# yearly: true# monthly: true# 标签页的分页设置#tag_generator:# per_page: 20# 分页路径，在public 中可以查看pagination_dir: page# Extensions 拓展插件配置## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/# 选择主题，前提需将主题下载至hexo根目录下# theme: landscapetheme: next# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repository: https://github.com/allenouyangke/allenouyangke.github.io.git branch: master# Duoshuo_system 多说评论系统调用duoshuo_shortname: allenouyangke# Content sharing services 分享系统# JiaThis_sharejiathis: true# Baidu_sharebaidushare: true# Duoshuo_shareduoshuo_share: true# 配置RSS#feed: #feed 类型 (atom/rss2) #type: atom #rss 路径 #path: atom.xml #在 rss 中最多生成的文章数(0显示所有) #limit: 0# Local Search# 自定义站点内容搜索# 需要先安装插件：# npm install hexo-generator-search --savesearch: path: search.xml # 只想设置所以文章可设置城post；默认是all； field: post]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[CentOS初始化]]></title>
      <url>%2F2016%2F11%2F29%2Finit-sys%2F</url>
      <content type="text"><![CDATA[&emsp;&emsp;由于比较常使用虚拟机，就做了CentOS6.7 minimal的模版，为了方便以后自己的使用需求，对minimal安装的系统进行了一些简单的配置，克隆以后就可以直接使用了。&lt;–!more–&gt; 实践环境 CentOS 6.7 minimal VMware workstation 12 初始化内容针对虚拟机的网卡设置（新系统不需要） 由于完全克隆的虚拟机物理网卡会有变更，刚克隆完成后需要重新设置HWADDR，可以执行以下脚本自动完成； 12345678910111213141516171819202122232425#Author: AllenKe.#Description: 用于设置完全克隆后的虚拟机物理网卡.#ifcfg-eth0和70-persistent-net.rules两个文件的路径netcard=/etc/sysconfig/network-scriptsnetrule=/etc/udev/rules.d#提取两个文件中mac地址信息macadd=`cat $netrule/70-persistent-net.rules | awk -F &quot;;&quot; &apos;&#123;print $4&#125;&apos; | awk -F &quot;\&quot;&quot; &apos;&#123;print $2&#125;&apos;`netadd=`cat /etc/sysconfig/network-scripts/ifcfg-eth0 | grep HWADDR | awk -F &quot;=&quot; &apos;&#123;print $2&#125;&apos;`#将ifcfg-eth0文件中的HWADDR额无力地址替换成70-persistent-net.rules文件中eth1的mac地址sed -i &quot;s/$netadd/$macadd/g&quot; /etc/sysconfig/network-scripts/ifcfg-eth0#判断新的mac地址是否应已经替换成功if [ $? -eq 0 ];then echo &quot;Change successful!&quot; rm -rf $netrule/70-persistent-net.ruleselse echo &quot;Not change the macaddress!&quot;fi#输入任意键进行重启pauseshutdown -r now 修改主机名 永久修改 12345678910#进入/etc/sysconfig/network，修改HOSTNAME参数cat /etc/sysconfig/network NETWORKING=yes HOSTNAME=allenke.allenke#执行hostname命令hostname allenke#重启／注销服务器shutdown -r now 临时修改 1234#直接执行hostnamehostname allenke#ctrl+d注销／重启 关闭selinux1234567891011#进入selinux配置文件vi /etc/selinux/config#将SELINUX=enforcing修改如下，然后保存退出SELINUX=disabled#设置SELinux状态setenforce 0#获取selinux状态getenforce 安装基础服务1yum install gcc gcc-c++ vim ntpdate wget -y 设置时间定时同步 在基础服务中已经安装了ntpdate 123456#找到公网／内网ntp服务器域名／IP，执行ntpdate/usr/sbin/ntpdate 0.cn.pool.ntp.org#设置每天凌晨00:00自动同步crontab -l0 */1 * * * /usr/sbin/ntpdate 0.cn.pool.ntp.org &gt;&gt; /var/log/ntpdate.log 设置别名 永久修改 123456789101112131415#在当前用户下操作cat ~/.bashrc # .bashrc # User specific aliases and functions alias rm=&apos;rm -i&apos; alias cp=&apos;cp -i&apos; alias mv=&apos;mv -i&apos; alias vi=&apos;vim&apos; # Source global definitions if [ -f /etc/bashrc ]; then . /etc/bashrc fi 临时修改 123456#直接执行命令aliasalias vi=&apos;vim&apos;#个人习惯，调整vim的字体颜色tail -1 /etc/vimrc highlight Comment ctermfg=green guifg=green history记录设置 处于安全考虑，个人习惯有输出操作的时间等信息 1234567891011#进入到/etc/bashrc，将4条语句添加到最后一行vi /etc/bashrc#保存命令的记录总数HISTFILESIZE=4000#输出记录的总数HISTSIZE=4000#时间显示的格式HISTTIMEFORMAT=&apos;%F %T &apos;#做为history的时间变量将值传递给history命令export HISTTIMEFORMAT 默认语言设置1234#设置中文或英文cat /etc/sysconfig/i18n #LANG=&quot;zh_CN.UTF-8&quot; LANG=&quot;en_US.UTF-8&quot;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[基于Mac的hexo+github page搭建]]></title>
      <url>%2F2016%2F11%2F28%2Fhexo-github%2F</url>
      <content type="text"><![CDATA[&emsp;&emsp;在MacBook上搭建自己的Hoxe+Github page，将Hexo作为未来学习总结的一个平台，并将相关的学习内容保存和分享。 配置SSH-key 步骤一 检查SSH key是否存在 1ls -al ~/.ssh 步骤二 生成SSH key 1ssh-keygen -t rsa -C &quot;your_email@example.com&quot; 步骤三 添加SSH key到Github登陆Github，寻找顺序：Github -&gt; Settings -&gt; SSH and GPS keys 1234#在Mac上执行命令，查看密钥信息cat ~/.ssh/id_rsa.pub#将相应的密钥添加到SSH and GPS keys上 步骤四 测试Mac与Github是否连通 12345ssh git@github.com#PTY allocation request failed on channel 0#Hi allenouyangke! You&apos;ve successfully authenticated, but GitHub does not provide shell access.#Connection to github.com closed. 安装Node.js Node.js是一个Javascript运行环境(runtime)。在这里用于生成静态页面。 步骤一 下载安装登陆Node.js官网 下载稳定版本安装即可。 步骤二 验证安装和版本123node --version#v6.9.1 安装Git Git是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。在这里用来将本地Hexo内容提交到Github上。 步骤一 Mac中，Xcode自带Git，在apple store下载安装即可使用。 步骤二 验证安装和版本123git --version#git version 2.9.3 (Apple Git-75) 安装Hexo 完成以上步骤后，就可以开始安装hexo了。 步骤一 终端下执行安装命令 1sudo npm install -g hexo-cli 步骤二 初始化进入到hexo的安装目录，进行初始化。 1hexo init &quot;your_dir_name&quot; 步骤三 开启hexo 1234hexo s#在浏览器中输入：http://localhost:4000或http://127.0.0.1:4000，能显示出hexo主页即安装完成#已经实现了本地的访问 配置Github 步骤一 创建hexo的项目Github -&gt; New repository -&gt; “rep_name:需要跟github账号的名称一致” 步骤二 同步hexo到github12345678910#进入到hexo的目录下#清理缓存文件（db.json）和已经生成的静态文件（publice）hexo clean#生成缓存和静态文件hexo g#重新部署到服务器（github）hexo d]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[linux study]]></title>
      <url>%2F2016%2F11%2F25%2Flinux-study%2F</url>
      <content type="text"><![CDATA[linux运维发展路线常见的就是下面两条路线:&emsp;&emsp;第一条：运维应用–&gt;系统架构–&gt;运维开发–&gt;系统开发&emsp;&emsp;第二条：运维应用–&gt;应用dba–&gt;架构dba–&gt;开发DBA Linux学习路线linux系统基础&emsp;&emsp;参考书籍，看鸟哥linux基础篇，至少要掌握这书60%内容，没必须全部掌握，但基本命令总得会。 网络服务&emsp;&emsp;基础的服务肯定要掌握，如FTP, DNS,SAMBA, 邮件, 这几个大概学一下就行，LAMP和LNMP是必须要熟练，不光光会搭建，要很熟悉里面的相当配置，因为公司最关键的绝对是WEB服务器，所以nginx和apache要熟悉，特别是nginx一定要很熟悉才行，至少有些公司还会用tomcat，这个也最好学一下。其实网络服务方面不用太担心，一般公司的环境都已经搭建好，就算有新服务器或让你整改，公司会有相应的文档让你参照来弄，至少相关的配置一定要学熟，肯定是编译安装多，那些模块要熟悉一下他的作用，特别是PHP那些模块。 shell脚本和另一个脚本语言&emsp;&emsp;shell是运维人员必须具备的，不懂这个连入职都不行，至少也要写出一些系统管理脚本，最简单也得写个监控CPU，内存比率的脚，这是最最最基本了，其中写系统脚本才是最有意义。另一个脚本语言是可选的，一般是3P，即python, perl和php，php就不需要考虑了，除非你要做开发，我个人建议学python会比较好，难实现自动化运维，perl是文本处理很强大，反正这两个学一个就行了。 sed和awk工具&emsp;&emsp;必须要掌握，在掌握这两个工具同时，还要掌握正则表达式，这个就痛苦了，正则是最难学的表达式，但结合到sed和awk中会很强大，在处理文本内容和过滤WEB内容时十分有用，不过在学shell的同时一般会经常结合用到的。 文本处理命令&emsp;&emsp;sort , tr , cut, paste, uniq, tee等，必学。 数据库&emsp;&emsp;首选mysql，linux用得最多是mysql，增删改查必学，特别要学熟查，其它方面可能不太需要，因为运维人员使用最多还是查。 防火墙&emsp;&emsp;防火墙也是个难点，最重要弄懂规则，如果学过CCNA的朋友可能会比较好学，因为iptables也有NAT表，原理是一样的，而FILTER表用得最多，反正不学就肯定不合格。 监控工具&emsp;&emsp;十分十分重要，最好学这3个，cacti，nagios，zibbix，企业用得最多应该是nagios和 zibbix，反正都学吧，但nagios会有点难，因为会涉及到用脚本写自动监控，那个地方很难。 集群和热备&emsp;&emsp;很重要，肯定要懂.但到了公司就不会让你去弄，因为新手基本不让你碰，集群工具有很多，最好学是LVS，这是必学，最好也学学nginx集群，反向代理，还有热备，这个就更多工具能实现了，mysql热备也要学，就是主从复制，其实不容易的，要学懂整个流程一点也不容易，只照着做根本没意思。 数据备份&emsp;&emsp;不学不行，工具有很多，但至少要把RAID的原理弄懂，特别是企业最常用的1+0或0+1，自己做实验也要弄出来，备份工具有很多，如tar, dump, rsync等。 寄语运维，是一个很枯燥的行业，所以要耐得住寂寞。把平凡的工作，做得不平凡。才能体现你的价值。]]></content>
    </entry>

    
  
  
</search>
